# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'test.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import re

class Ui_MainWindow(object):
    def action(self,event):
        value= self.input.text()
        if self.triAdd.count()==0 : #vérifier qi la liste pleine ou vide pour ajouter
           if value !="": 
            self.triAdd.addItem(value) 
            self.input.setText("")
            self.erreur.setText("")

           else:
               self.erreur.setText("remplir votre input par une valeur")
               self.erreur.setStyleSheet("color: red;")
               self.erreur.setDisabled(True) 
        else:
            
            v=self.triAdd.item(0).text() #récuperer la premiére elemnt de liste
            print(v) 
            p=re.search("[a-zA-Z-]",value)
            test=re.search("[[a-zA-Z-]",v)
            if v.isnumeric() and value.isnumeric(): #tester si valeur enter et la valeur input numérique 
                
                 self.triAdd.addItem(self.input.text())
                 self.input.setText("")
                 self.erreur.setText(" ")

                 
            elif p and test : # valeur enter et la valeur input str
                 self.triAdd.addItem(self.input.text())
                 print("yes")
                 self.erreur.setText(" ")
                
            else:
                    print("erreur value")
                    self.erreur.setText("vérifier votre type d'input ")
                    self.erreur.setStyleSheet("color: red;")
                    self.input.setText("")
                    # self.corriger.setVisible(True)
                    self.erreur.setDisabled(True)
       
    #changer erreur
    # def erre(self):
    #     self.erreur.setText("")
        
    # def correction(self):
    #          self.input.setDisabled(False)
    #          self.input.setText("")
    #          self.erreur.setText("")  
    #              
    listSorted=[]
    def delete(self):
        if self.triAdd.count()>0:
          myselcted=self.triAdd.currentIndex().row()
          value=self.triAdd.item(myselcted).text()
        
          self.triAdd.takeItem(myselcted)
          print(value)
          
          print(self.triList.count())
          for x in range(len(self.listSorted)):
              print(x)
              if(value in self.listSorted):
                  self.listSorted.pop(x)
                  self.triList.takeItem(x)
              else:
                  break

                  
          self.input.setText("")
        else:
            self.delete_2.setDisabled(True)  
   
    def select(self):
        if self.triAdd.count()>0 :
            print("select item")
            myselcted=self.triAdd.currentIndex().row()
            print(myselcted)
            self.input.setText(str(self.triAdd.item(myselcted).text()))
            self.delete_2.setDisabled(False)
            self.update.setDisabled(False) 
       
    
    def modifier(self):
        if self.triAdd.count()>0:
            print("update")
            myselcted=self.triAdd.currentIndex().row()
            print(myselcted)
            value=self.input.text()
            v=self.triAdd.item(myselcted).text() #récuperer la premiére elemnt de liste
            print(v) 
            p=re.search("[a-zA-Z-]",value)
            test=re.search("[[a-zA-Z-]",v)
            if v.isnumeric() and value.isnumeric(): #tester si valeur enter et la valeur input numérique 
                
                 self.triAdd.item(myselcted).setText(self.input.text())
                 self.input.setText("")
                 self.erreur.setText(" ")

                 
            elif p and test : # valeur enter et la valeur input str
                 self.triAdd.item(myselcted).setText(self.input.text())
                 print("yes")
                 self.erreur.setText(" ")
                
            else:
                    print("erreur value")
                    self.erreur.setText("vérifier votre type d'input ")
                    self.erreur.setStyleSheet("color: red;")
                    self.input.setText("")
                    # self.corriger.setVisible(True)
                    self.erreur.setDisabled(True)
            
            print( self.triAdd.item(myselcted).text())
        else:
               
            
            self.update.setDisabled(True)
    def trier(self):
            items=[]
           
            for i in range(self.triAdd.count()):
           
             items.append(self.triAdd.item(i).text())
    
            unique_items_set = set(items)
            self.listSorted=list(unique_items_set)
            self.listSorted.sort()
            self.triList.clear()
            if self.listSorted !=None:
                for x in range(len(self.listSorted)):
                    self.triList.addItem(str(self.listSorted[x]))
                    print(self.listSorted[x])        
                print(self.listSorted)

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setStyleSheet("")
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.frame1 = QtWidgets.QFrame(self.centralwidget)
        self.frame1.setMaximumSize(QtCore.QSize(16777212, 16777215))
        self.frame1.setStyleSheet("#frame1{\n"
"background:rgb(6, 1, 59)\n"
"}\n"
"#menu{\n"
"\n"
"\n"
"font-size:30px;\n"
"color:rgb(255, 5, 193);\n"
"font-family:Arial;\n"
"text-align:center;\n"
"font-weight:bold;\n"
"\n"
"\n"
"}\n"
"\n"
"#titre1{\n"
"\n"
"\n"
"font-size:30px;\n"
"color:rgb(255, 5, 193);\n"
"font-family:Arial;\n"
"text-align:center;\n"
"font-weight:bold;\n"
"\n"
"\n"
"}\n"
"#add{\n"
"font-size:15px;\n"
"font-weight:bold;\n"
"\n"
"}\n"
"#update{\n"
"font-size:15px;\n"
"font-weight:bold;\n"
"\n"
"}\n"
"#delete_2{\n"
"font-size:15px;\n"
"font-weight:bold;\n"
"\n"
"}\n"
"#tri{\n"
"font-size:15px;\n"
"font-weight:bold;\n"
"\n"
"}")
        self.frame1.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame1.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame1.setObjectName("frame1")
        self.widget = QtWidgets.QWidget(self.frame1)
        self.widget.setGeometry(QtCore.QRect(20, 40, 281, 261))
        self.widget.setObjectName("widget")
        self.gridLayoutWidget = QtWidgets.QWidget(self.widget)
        self.gridLayoutWidget.setGeometry(QtCore.QRect(50, 80, 160, 172))
        self.gridLayoutWidget.setObjectName("gridLayoutWidget")
        self.gridLayout = QtWidgets.QGridLayout(self.gridLayoutWidget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        self.add = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.add.setObjectName("add")
        self.add.clicked.connect(self.action)
        self.gridLayout.addWidget(self.add, 0, 0, 1, 1)
        self.delete_2 = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.delete_2.setObjectName("delete_2")
        self.delete_2.clicked.connect(self.delete)
        self.delete_2.setDisabled(True)
       

        self.gridLayout.addWidget(self.delete_2, 2, 0, 1, 1)
        self.update = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.update.setObjectName("update")
        self.update.clicked.connect(self.modifier)
        self.update.setDisabled(True)
        self.gridLayout.addWidget(self.update, 1, 0, 1, 1)
        self.tri = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.tri.setObjectName("tri")
        self.tri.clicked.connect(self.trier)
        self.gridLayout.addWidget(self.tri, 3, 0, 1, 1)
        self.menu = QtWidgets.QLabel(self.widget)
        self.menu.setGeometry(QtCore.QRect(70, 20, 91, 41))
        self.menu.setObjectName("menu")
        self.widget_2 = QtWidgets.QWidget(self.frame1)
        self.widget_2.setGeometry(QtCore.QRect(30, 290, 361, 291))
        self.widget_2.setObjectName("widget_2")
        self.gridLayoutWidget_2 = QtWidgets.QWidget(self.widget_2)
        self.gridLayoutWidget_2.setGeometry(QtCore.QRect(10, 40, 271, 201))
        self.gridLayoutWidget_2.setObjectName("gridLayoutWidget_2")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.gridLayoutWidget_2)
        self.gridLayout_2.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.titre1 = QtWidgets.QLabel(self.gridLayoutWidget_2)
        self.titre1.setObjectName("titre1")
        self.gridLayout_2.addWidget(self.titre1, 0, 0, 1, 1)
        self.triList = QtWidgets.QListWidget(self.gridLayoutWidget_2)
        self.triList.setObjectName("triList")
        self.gridLayout_2.addWidget(self.triList, 1, 0, 2, 1)
        self.horizontalLayout.addWidget(self.frame1)
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setStyleSheet("#title{\n"
"font-size:30px;\n"
"color:rgb(255, 5, 193);\n"
"font-family:Arial;\n"
"text-align:center;\n"
"font-weight:bold;\n"
"\n"
"}\n"
"#frame{\n"
"background-color:rgb(6, 1, 59);\n"
"}#corriger{\n"
"color:red;\n"
"font-weight:bold\n"
"}")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.gridLayoutWidget_3 = QtWidgets.QWidget(self.frame)
        self.gridLayoutWidget_3.setGeometry(QtCore.QRect(60, 250, 271, 271))
        self.gridLayoutWidget_3.setObjectName("gridLayoutWidget_3")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.gridLayoutWidget_3)
        self.gridLayout_3.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.input = QtWidgets.QLineEdit(self.gridLayoutWidget_3)
        self.input.setObjectName("input")
        #self.input.textChanged.connect(self.erre)
        self.gridLayout_3.addWidget(self.input, 0, 0, 1, 1)
        self.triAdd = QtWidgets.QListWidget(self.gridLayoutWidget_3)
        self.triAdd.setObjectName("triAdd")
        self.triAdd.itemClicked.connect(self.select)
        
        self.gridLayout_3.addWidget(self.triAdd, 1, 0, 1, 1, QtCore.Qt.AlignHCenter)
        self.erreur = QtWidgets.QLineEdit(self.gridLayoutWidget_3)
        self.erreur.setObjectName("erreur")
        self.gridLayout_3.addWidget(self.erreur, 3, 0, 1, 1)
        self.corriger = QtWidgets.QPushButton(self.gridLayoutWidget_3)
        self.corriger.setObjectName("corriger")
        self.corriger.setVisible(False)
        #self.corriger.clicked.connect(self.correction)
        self.gridLayout_3.addWidget(self.corriger, 4, 0, 1, 1)
        self.verticalLayoutWidget = QtWidgets.QWidget(self.frame)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(30, 40, 443, 80))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.title = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.title.setObjectName("title")
        self.verticalLayout.addWidget(self.title)
        self.horizontalLayout.addWidget(self.frame)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.add.setText(_translate("MainWindow", "Add"))
        self.delete_2.setText(_translate("MainWindow", "Delete"))
        self.update.setText(_translate("MainWindow", "Update"))
        self.tri.setText(_translate("MainWindow", "Tri"))
        self.menu.setText(_translate("MainWindow", "Menu"))
        self.titre1.setText(_translate("MainWindow", "Des Données Triés"))
        self.input.setPlaceholderText(_translate("MainWindow", "Enter vos données"))
        self.corriger.setText(_translate("MainWindow", "corriger Erreur "))
        self.title.setText(_translate("MainWindow", "Project Tri © Mariem Marrekchi"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
